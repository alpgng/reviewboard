generator client {
 provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // domain relations
  items         Item[]
  audits        Audit[]
}

model Account {
id String @id @default(cuid())
userId String
type String
provider String
providerAccountId String
refresh_token String? @db.Text
access_token String? @db.Text
expires_at Int?
token_type String?
scope String?
id_token String? @db.Text
session_state String?
user User @relation(fields: [userId], references: [id], onDelete: Cascade)


@@unique([provider, providerAccountId])
}


model Session {
id String @id @default(cuid())
sessionToken String @unique
userId String
expires DateTime
user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


// --- Domain tables (skeletons for Day 1) ---
model Item {
id String @id @default(cuid())
title String
description String
amount Float
tags String[]
risk_score Int @default(0)
status Status @default(NEW)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
userId String
user User @relation(fields: [userId], references: [id])
audits Audit[]
}


model Audit {
id String @id @default(cuid())
action String
createdAt DateTime @default(now())
userId String
itemId String
user User @relation(fields: [userId], references: [id])
item Item @relation(fields: [itemId], references: [id])
}


enum Status {
NEW
IN_REVIEW
APPROVED
REJECTED
}


model Rule {
id String @id @default(cuid())
field String
operator String
value String
score Int
}